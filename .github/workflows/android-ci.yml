name: Android CI/CD

on:
  push:
    tags:
      - 'v*.*.*'
    branches: [ "master", "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run unit tests
        run: ./gradlew test
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Step to decode the Base64 keystore from secrets and write it to a file.
      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: echo "$KEYSTORE_BASE64" | base64 --decode > app/my-release-key.keystore

      # Step to build a signed Android App Bundle (AAB).
      # The environment variables are read by Gradle to sign the app.
      - name: Build with Gradle
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      # Step to upload the generated AAB as a workflow artifact.
      - name: List files in outputs directory
        run: ls -R app/build/outputs/

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          path: app/build/outputs/apk/release/*.apk
  release:
    # It depends on the 'build' job finishing successfully.
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          body: "New release based on commit ${{ github.sha }}"
          files: app-release.apk